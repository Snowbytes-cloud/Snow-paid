local Players = game:GetService("Players")
local Player = Players.LocalPlayer

-- URL do repositório com a whitelist
local whitelistURL = "https://raw.githubusercontent.com/Snowbytes-cloud/wl/refs/heads/main/wl"

-- Puxa a whitelist do seu repositório
local success, whitelist = pcall(function()
    return loadstring(game:HttpGet(whitelistURL, true))()
end)

if not success or type(whitelist) ~= "table" then
    warn("Não foi possível carregar a whitelist ou formato inválido. Negando acesso.")
    Player:Kick("Erro ao carregar whitelist.")
    return
end

-- Checa se o jogador está na whitelist
local allowed = false
for _, name in ipairs(whitelist) do
    if name == Player.Name then
        allowed = true
        break
    end
end

if not allowed then
    Player:Kick("Você não está autorizado para Usar esse Script compra ou peça ao dono.")
    return
end

-- Se passou na whitelist, continua com o menu

-- Carrega a ZS-LIB
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Snowbytes-cloud/suez/refs/heads/main/Suez"))()

local player = Players.LocalPlayer
local leaderstats = player:WaitForChild("leaderstats", 5)
local displayName = player.DisplayName

-- cria a janela
local window = library:AddWindow("Snow paid", {
    main_color = Color3.fromRGB(10, 10, 80), -- azul escuro
    min_size   = Vector2.new(660, 660),
    can_resize = false
})

-- aba principal
local page = window:AddTab("Main")

-- Variável de controle
local fastRebirth = false

-- Função do Fast Rebirth
local function startFastRebirth()
    spawn(function()
        local a = game:GetService("ReplicatedStorage")
        local c = player

        local function unequipAllPets()
            for _, folder in pairs(c.petsFolder:GetChildren()) do
                if folder:IsA("Folder") then
                    for _, pet in pairs(folder:GetChildren()) do
                        a.rEvents.equipPetEvent:FireServer("unequipPet", pet)
                    end
                end
            end
            task.wait(0.1)
        end

        local function equipPetByName(name)
            unequipAllPets()
            task.wait(0.01)
            for _, pet in pairs(c.petsFolder.Unique:GetChildren()) do
                if pet.Name == name then
                    a.rEvents.equipPetEvent:FireServer("equipPet", pet)
                end
            end
        end

        local function findMachine(machineName)
            local machine = workspace.machinesFolder:FindFirstChild(machineName)
            if not machine then
                for _, f in pairs(workspace:GetChildren()) do
                    if f:IsA("Folder") and f.Name:find("machines") then
                        machine = f:FindFirstChild(machineName)
                        if machine then break end
                    end
                end
            end
            return machine
        end

        local function pressE()
            local u = game:GetService("VirtualInputManager")
            u:SendKeyEvent(true, "E", false, game)
            task.wait(0.1)
            u:SendKeyEvent(false, "E", false, game)
        end

        while fastRebirth do
            local reb = c.leaderstats.Rebirths.Value
            local neededStr = 10000 + (5000 * reb)
            if c.ultimatesFolder:FindFirstChild("Golden Rebirth") then
                neededStr = math.floor(neededStr * (1 - (c.ultimatesFolder["Golden Rebirth"].Value * 0.1)))
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Swift Samurai")

            while c.leaderstats.Strength.Value < neededStr and fastRebirth do
                for _ = 1, 20 do
                    c.muscleEvent:FireServer("rep")
                end
                task.wait()
            end

            unequipAllPets()
            task.wait(0.1)
            equipPetByName("Tribal Overlord")

            local machine = findMachine("Jungle Bar Lift")
            if machine and machine:FindFirstChild("interactSeat") then
                c.Character.HumanoidRootPart.CFrame = machine.interactSeat.CFrame * CFrame.new(0, 3, 0)
                repeat
                    task.wait(0.1)
                    pressE()
                until c.Character.Humanoid.Sit or not fastRebirth
            end

            local beforeRebirth = c.leaderstats.Rebirths.Value
            repeat
                a.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                task.wait(0.1)
            until c.leaderstats.Rebirths.Value > beforeRebirth or not fastRebirth
        end
    end)
end

-- Switch real para Fast Rebirth
page:AddSwitch("Fast Rebirth", function(state)
    fastRebirth = state
    if fastRebirth then
        startFastRebirth()
    end
end)
